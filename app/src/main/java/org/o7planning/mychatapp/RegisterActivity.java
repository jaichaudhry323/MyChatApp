package org.o7planning.mychatapp;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import org.o7planning.mychatapp.Utils.ToastUtil;

import java.util.HashMap;

public class RegisterActivity extends AppCompatActivity {

    Button mloginButton;
    TextView mEmailTextView;
    TextView mPasswordTextView;
    TextView mUsernameTextView;

    String msg = " \n n \n n \n";

    private FirebaseAuth mAuth;
    DatabaseReference databaseReference;

    public void onCreate(Bundle B) {
        super.onCreate(B);
        setContentView(R.layout.activity_register);

        mloginButton = findViewById(R.id.register_button);
        mEmailTextView = findViewById(R.id.email);
        mPasswordTextView = findViewById(R.id.password);
        mUsernameTextView = findViewById(R.id.username);

        // Initialize Firebase Auth
        mAuth = FirebaseAuth.getInstance();

        mloginButton.setOnClickListener(v -> {

            String email = mEmailTextView.getText().toString();
            String password = mPasswordTextView.getText().toString();
            String username = mUsernameTextView.getText().toString();

            if (TextUtils.isEmpty(username) || TextUtils.isEmpty(email) || TextUtils.isEmpty(password)) {
                Toast.makeText(RegisterActivity.this, "All fields are required", Toast.LENGTH_SHORT).show();
            } else {
                registeruser(email, password, username);
            }

        });

    }

    public void print(Exception s) {
        System.out.println(s);
    }

    public void registeruser(String email, String password, String username) {

        if (!verifyEmail(email)) {
            return;
        }
        if (!verifyPassword(password)) {
            return;
        }

        mAuth = FirebaseAuth.getInstance();

        mAuth.createUserWithEmailAndPassword(email, password)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {

                            //ADD THE USER TO DATABASE

                            FirebaseUser firebaseUser = mAuth.getCurrentUser();   // user has email , password and an id
                            assert firebaseUser != null;
                            String userId = firebaseUser.getUid();  // generated by firebase

                            // created an area by name userId where we will place the user
                            databaseReference = FirebaseDatabase.getInstance().getReference("users").child(userId);

                            HashMap<String, String> hashMap = new HashMap<>();
                            hashMap.put("id", userId);
                            hashMap.put("username", username);
                            hashMap.put("imageurl", "default");
                            hashMap.put("status", "offline");
                            hashMap.put("search", username.toLowerCase());
                            hashMap.put("email", email);

                            // below code is ok but we need confirmation about whether it has been done or not so
                            // thats why there's addOnCompleteListener which works after/on setValue()
                            // databaseReference.setValue(hashMap);

                            databaseReference.setValue(hashMap).addOnCompleteListener(new OnCompleteListener<Void>() {
                                @Override
                                public void onComplete(@NonNull Task<Void> task) {

                                    if (task.isSuccessful()) {
                                        Toast.makeText(RegisterActivity.this, "Successfully added to Database.",
                                                Toast.LENGTH_SHORT).show();

                                        Intent intent = new Intent(RegisterActivity.this, MainActivity.class);
                                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);   // FLAG_ACTIVITY_CLEAR_TOP too worked but what is written is better as it doesnt reproduce the main page again on back button click
                                        startActivity(intent);

                                    } else {

                                        Toast.makeText(RegisterActivity.this, "Database insertion failure",
                                                Toast.LENGTH_SHORT).show();
                                    }
                                }
                            });

                        } else {
                            print(task.getException());

                            Toast.makeText(RegisterActivity.this, "Email is already registered",
                                    Toast.LENGTH_SHORT).show();
                        }

                    }
                });
    }


    Boolean verifyPassword(String password) {

        int ok = 1;
        int a = 0, A = 0, num = 0;

        if (password.contains(" ")) {
            ToastUtil.makeLongToast(getApplicationContext(), "Error password contains WhiteSpace");
            ok = 0;
            return Boolean.FALSE;
        }

        for (int i = 0; i < password.length(); i++) {
            char c = password.charAt(i);

            if (c >= 48 && c <= 57) {
                num++;
            } else if (c >= 65 && c <= 90) {
                A++;
            } else if (c >= 97 && c <= 122) {
                a++;
            }
        }

        if (a == 0) {
            ToastUtil.makeLongToast(getApplicationContext(), "Password should contain atleast 1 small case character");
            ok = 0;
            return Boolean.FALSE;
        }
        if (A == 0) {
            ToastUtil.makeLongToast(getApplicationContext(), "Password should contain atleast 1 upper case character");
            ok = 0;
            return Boolean.FALSE;
        }
        if (num == 0) {
            ToastUtil.makeLongToast(getApplicationContext(), "Password should contain atleast 1 number");
            ok = 0;
            return Boolean.FALSE;
        }

        if (a + A + num == password.length()) {
            ToastUtil.makeLongToast(getApplicationContext(), "Password should contain atleast 1 special character");
            ok = 0;
            return Boolean.FALSE;
        }


        if (ok == 0) {
            return Boolean.FALSE;
        }

        if (password.length() > 15 || password.length() < 8) {
            ToastUtil.makeLongToast(getApplicationContext(), "Password Length must be between 8-15");
            return Boolean.FALSE;
        }


        return Boolean.TRUE;
    }

    Boolean verifyEmail(String email) {
        int ok = 1;

        if (!email.contains("@gmail.com")) {
            ok = 0;
        }

        if (email.contains((" "))) {
            ok = 0;
        }

        String[] sarr = email.split("@gmail.com");

        if (sarr.length != 1) {
            ok = 0;
        }

        if (ok == 0) {
            ToastUtil.makeLongToast(getApplicationContext(), "Please Enter a Valid Email");
            return Boolean.FALSE;
        }

        return Boolean.TRUE;
    }

}
